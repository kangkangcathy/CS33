




four byte per cell

[]
[]
[]
[&a] -> 0x8(%rsp)
[]
%rsp -> [a]

%rsi -> [a] -> 0x14(%rsi)
%rax -> [b] -> 0x10(%rdx) -> (%rsp)  ->0
%r9  -> [] -> 0xc(%rdx)
%r8  -> [] -> 0x8(%rdx)
%rcx -> [] -> 0x4(%rdx)
[&arr[0]] -> %rdx

arr[5]=0


phase 4:

rbx: 最低位字符串
eax = 3
edx = 1
eax = 0
eax < 2, jump
rcx = eax = 0
ecx = rbx + rcx = rbx = 第一个字符
ecx += 0xf 1111
edx = 0x402aa0(2) + 4*rcx = 
eax += 1 => 1
eax < 2, jump
rcx = eax = 1
ecx = rbx + rcx = rbx + 1 = 第二个字符
ecx += 0xf
edx = 0x402aa0 + 4*rcx = 
eax += 1 = 2
eax = 2, jump
rcx = eax = 2
ecx = rbx + rcx = rbx + 2 = 第三个字符 =100 1100 0000
ecx += 0xf
edx = 0x402aa0 + 4*rcx = 0x1341 --> rcx = 100 1100 1111
eax += 1 = 3
eax > 2, doesnt jump
edx == 0x1341 = 4929


要是 2 3 5



[]
[]
[] -> rsi  0        <=14
[] -> rds
[]
[] -> rsp


edx = 0xe
esi = 0
edi = 0


eax = edx = 0xe
eax -= esi (0)
ebx = eax = 0xe 
ebx = 0x1f > 0xe = 0
eax += ebx = eax = 0xe
eax = 0xe >> 1 = 0111 = 7
ebx = rax + rsi = 7+0 = 7
ebx > edi
edx -= 7


loop
eax = edx = 7
eax -= esi = 7
ebx = eax = 7
ebx = 0
eax+=ebx = 7
eax >>1 = 3
ebx = rax + rsi = 7
ebx > edi

